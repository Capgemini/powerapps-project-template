jobs:
  - job: BuildAndTestJob
    variables:
      - name: GitVersion.SemVer
        value: ''
    displayName: Build and Test

    steps:
      - task: gitversion/setup@0
        displayName: Install GitVersion
        inputs:
          versionSpec: '5.x'

      - task: gitversion/execute@0
        displayName: Execute GitVersion
        inputs:
          useConfigFile: true
          configFilePath: '$(Build.SourcesDirectory)\GitVersion.yml'
          updateAssemblyInfo: true

      - pwsh: Write-Host '##vso[task.setvariable variable=SemVer;isOutput=true]$(GitVersion.SemVer)'
        name: OutputSemVerTask
        displayName: Output SemVer

      - task: Npm@1
        displayName: Increment Package Version
        inputs:
          command: custom
          customCommand: version $(GitVersion.SemVer) --git-tag-version false

      - task: Npm@1
        displayName: Install NPM Dependencies
        inputs:
          verbose: true

      # - task: SonarCloudPrepare@1
      #   displayName: Prepare SonarCloud
      #   inputs:
      #     SonarCloud: 'SonarCloud'
      #     organization: 'capgemini-1'
      #     scannerMode: 'MSBuild'
      #     projectKey: 'powerapps-project-generator'
      #     projectName: 'powerapps-project-generator'
      #     projectVersion: '$(GitVersion.SemVer)'

      - task: Npm@1
        displayName: Build Package
        inputs:
          command: custom
          customCommand: run build

      # - task: Npm@1
      #   displayName: "Run Tests"
      #   inputs:
      #     command: custom
      #     customCommand: run test

      # - task: SonarCloudAnalyze@1
      #   displayName: Analyse with SonarCloud

      # - task: SonarCloudPublish@1
      #   displayName: Publish SonarCloud results
      #   inputs:
      #     pollingTimeoutSec: '300'

      - task: WhiteSource@21
        displayName: Detect security and licence issues
        inputs:
          cwd: '$(Build.SourcesDirectory)'

      - task: CopyFiles@2
        displayName: Copy Common folder
        inputs:
          Contents: 'common\**'
          TargetFolder: $(Build.ArtifactStagingDirectory)/out

      - task: CopyFiles@2
        displayName: Copy Generated folder
        inputs:
          Contents: 'generator\**'
          TargetFolder: $(Build.ArtifactStagingDirectory)/out

      - task: CopyFiles@2
        displayName: Copy package.json
        inputs:
          Contents: 'package.json'
          TargetFolder: $(Build.ArtifactStagingDirectory)/out

      - publish: $(Build.ArtifactStagingDirectory)/out
        displayName: Publish NPM artifact
        artifact: powerapps-project-generator
